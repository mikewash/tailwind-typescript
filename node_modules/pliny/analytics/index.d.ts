import { GoogleAnalyticsProps } from './GoogleAnalytics.js';
export { GA, GoogleAnalyticsProps } from './GoogleAnalytics.js';
import { PlausibleProps } from './Plausible.js';
export { Plausible, PlausibleProps } from './Plausible.js';
export { SimpleAnalytics } from './SimpleAnalytics.js';
import { UmamiProps } from './Umami.js';
export { Umami, UmamiProps } from './Umami.js';
import { PosthogProps } from './Posthog.js';
export { Posthog, PosthogProps } from './Posthog.js';

declare global {
    interface Window {
        gtag?: (...args: any[]) => void;
        plausible?: (...args: any[]) => void;
        sa_event?: (...args: any[]) => void;
    }
}
interface AnalyticsConfig extends Partial<GoogleAnalyticsProps>, Partial<PlausibleProps>, Partial<PosthogProps>, Partial<UmamiProps> {
    simpleAnalytics?: boolean;
}
/**
 * @example
 * const analytics: AnalyticsConfig = {
 *  plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app
 *  simpleAnalytics: false, // true or false
 *  umamiWebsiteId: '', // e.g. 123e4567-e89b-12d3-a456-426614174000
 *  posthogProjectApiKey: '', // e.g. AhnJK8392ndPOav87as450xd
 *  googleAnalyticsId: '', // e.g. UA-000000-2 or G-XXXXXXX
 * }
 */
interface AnalyticsProps {
    analyticsConfig: AnalyticsConfig;
}
/**
 * Supports plausible, simpleAnalytics, umami or googleAnalytics.
 * If you want to use an analytics provider you have to add it to the
 * content security policy in the `next.config.js` file.
 * @param {AnalyticsProps} { analytics }
 * @return {*}
 */
declare const Analytics: ({ analyticsConfig }: AnalyticsProps) => JSX.Element;

export { Analytics, AnalyticsConfig, AnalyticsProps };

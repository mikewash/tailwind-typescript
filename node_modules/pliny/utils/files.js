import fs from 'fs';
import path from 'path';

// src/utils/files.ts
var pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);
var flattenArray = (input) => input.reduce((acc, item) => [...acc, ...Array.isArray(item) ? item : [item]], []);
var map = (fn) => (input) => input.map(fn);
var walkDir = (fullPath) => {
  return fs.statSync(fullPath).isFile() ? fullPath : getAllFilesRecursively(fullPath);
};
var pathJoinPrefix = (prefix) => (extraPath) => path.join(prefix, extraPath);
var getAllFilesRecursively = (folder) => pipe(fs.readdirSync, map(pipe(pathJoinPrefix(folder), walkDir)), flattenArray)(folder);

export { getAllFilesRecursively };

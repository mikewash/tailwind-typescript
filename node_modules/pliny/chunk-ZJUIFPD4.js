import { useCallback, useEffect } from 'react';
import { useTheme } from 'next-themes';
import { jsx } from 'react/jsx-runtime';

// src/comments/Giscus.tsx
var Giscus = ({
  themeURL,
  theme,
  darkTheme,
  repo,
  repositoryId,
  category,
  categoryId,
  reactions,
  metadata,
  inputPosition,
  lang,
  mapping
}) => {
  const { theme: nextTheme, resolvedTheme } = useTheme();
  const commentsTheme = themeURL === "" ? nextTheme === "dark" || resolvedTheme === "dark" ? darkTheme : theme : themeURL;
  const COMMENTS_ID = "comments-container";
  const LoadComments = useCallback(() => {
    const script = document.createElement("script");
    script.src = "https://giscus.app/client.js";
    script.setAttribute("data-repo", repo);
    script.setAttribute("data-repo-id", repositoryId);
    script.setAttribute("data-category", category);
    script.setAttribute("data-category-id", categoryId);
    script.setAttribute("data-mapping", mapping);
    script.setAttribute("data-reactions-enabled", reactions);
    script.setAttribute("data-emit-metadata", metadata);
    script.setAttribute("data-input-position", inputPosition);
    script.setAttribute("data-lang", lang);
    script.setAttribute("data-theme", commentsTheme);
    script.setAttribute("crossorigin", "anonymous");
    script.async = true;
    const comments = document.getElementById(COMMENTS_ID);
    if (comments)
      comments.appendChild(script);
    return () => {
      const comments2 = document.getElementById(COMMENTS_ID);
      if (comments2)
        comments2.innerHTML = "";
    };
  }, [commentsTheme]);
  useEffect(() => {
    LoadComments();
  }, [LoadComments]);
  return /* @__PURE__ */ jsx("div", {
    className: "giscus",
    id: COMMENTS_ID
  });
};

export { Giscus };

{"version":3,"file":"generator.mjs","sources":["../../src/regex.js","../../src/parse-citation.js","../../src/utils.js","../../src/html-transform-node.js","../../src/generator.js"],"sourcesContent":["/**\n * Captures normal citation in square bracket and in-text citation\n * Citation key start should start with a letter, digit, or _,\n * and contains only alphanumerics and single internal punctuation characters (:.#$%&-+?<>~/),\n *\n * e.g. [-@wadler1990], [@hughes1989, sec 3.4], [see @wadler1990; and @hughes1989, pp. 4]\n * and @wadler1990\n *\n * Group #1 - citation term without [] bracket e.g. -@wadler1990\n * Group #2 - in-text citation term e.g. @wadler1990\n *\n * \\[([^[\\]]*@[^[\\]]+)\\] for group #1\n * (?!\\b)@([a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*) for group #2\n * Use (?!\\b) to avoid email like address e.g. xyx@google.com\n * */\nexport const citeExtractorRe =\n  /\\[([^[\\]]*@[^[\\]]+)\\]|(?!\\b)(@[a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*)/\nexport const citeKeyRe = /@([a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*)/\nexport const citeBracketRe = /\\[.*\\]/\n","/**\n * @typedef CiteItem\n *   Cite item to be passed into citeproc-js\n * @property {string} [id]\n *   The id field is required\n * @property {string} [locator]\n *   A string identifying a page number or other pinpoint location or range within the resource;\n * @property {string} [label]\n *   Path to file\n * @property {string} [prefix]\n *   A string to print before this cite item\n * @property {string} [suffix]\n *   A string to print after this cite item\n * @property {boolean} [suppress-author]\n *   If true, author names will not be included in the citation output for this cite\n * @property {boolean} [author-only]\n *   If true, only the author name will be included in the citation output for this cite\n */\n\nimport { citeBracketRe, citeKeyRe } from './regex.js'\n\nconst locatorMapping = {\n  book: 'book',\n  'bk.': 'book',\n  'bks.': 'book',\n  chapter: 'chapter',\n  'chap.': 'chapter',\n  'chaps.': 'chapter',\n  column: 'column',\n  'col.': 'column',\n  'cols.': 'column',\n  figure: 'figure',\n  'fig.': 'figure',\n  'figs.': 'figure',\n  folio: 'folio',\n  'fol.': 'folio',\n  'fols.': 'folio',\n  number: 'number',\n  'no.': 'number',\n  'nos.': 'number',\n  line: 'line',\n  'l.': 'line',\n  'll.': 'line',\n  note: 'note',\n  'n.': 'note',\n  'nn.': 'note',\n  opus: 'opus',\n  'op.': 'opus',\n  'opp.': 'opus',\n  page: 'page',\n  'p.': 'page',\n  'pp.': 'page',\n  paragraph: 'paragraph',\n  'para.': 'paragraph',\n  'paras.': 'paragraph',\n  part: 'part',\n  'pt.': 'part',\n  'pts.': 'part',\n  section: 'section',\n  'sec.': 'section',\n  'secs.': 'section',\n  'sub verbo': 'sub verbo',\n  's.v.': 'sub verbo',\n  's.vv.': 'sub verbo',\n  verse: 'verse',\n  'v.': 'verse',\n  'vv.': 'verse',\n  volume: 'volume',\n  'vol.': 'volume',\n  'vols.': 'volume',\n  '¶': 'paragraph',\n  '¶¶': 'paragraph',\n  '§': 'section',\n  '§§': 'section',\n}\n\n/**\n * Parses a given citation string and return entries and isComposite flag required for cite-proc.\n * Adapted from https://github.com/Zettlr/Citr/blob/master/lib/citr.ts\n *\n * @param {string} citeString Cite string in the form of '[@item]' or '@item'\n * @return {[CiteItem[], boolean]} [entries, isComposite]\n */\nexport const parseCitation = (citeString) => {\n  /** @type {CiteItem[]} */\n  let entries = []\n  let isComposite = false\n  if (citeBracketRe.test(citeString)) {\n    // Handle citations in the form of [@item1; @item2]\n    const citeItems = citeString.substr(1, citeString.length - 2).split(';')\n    for (const citeItem of citeItems) {\n      // Prefix is the portion before @ e.g. [see @item1] or an empty string\n      let prefix = ''\n      let locator = ''\n      let label = 'page'\n      let suffix = ''\n      const citeChunk = citeItem.split('@')\n      if (citeChunk.length === 1) {\n        throw new Error('Cite key should be in the form of @key')\n      } else if (citeChunk.length > 2) {\n        throw new Error('More than one cite key @ detected, please separate keys with ;')\n      }\n      prefix += citeChunk[0]\n      prefix = prefix.trim()\n\n      // If [-@item1], suppress author\n      let suppressAuthor = citeItem.indexOf('@') > 0 && citeItem[citeItem.indexOf('@') - 1] === '-'\n      if (suppressAuthor) prefix = prefix.substr(0, prefix.length - 1).trim()\n\n      // The citation key can be terminated with a comma or space\n      let commaIndex = citeChunk[1].indexOf(',') + 1\n      // If the commaIndex is 0, this means there was no comma - check for space\n      if (commaIndex === 0) commaIndex = citeChunk[1].indexOf(' ') + 1\n      // Pass undefined to extract everything\n      if (commaIndex <= 0) commaIndex = undefined\n      const citeKey = citeItem.substr(citeItem.indexOf('@'), commaIndex).match(citeKeyRe)[0]\n\n      // We are left with the locator, suffix and label\n      let afterKey = citeItem.split('@')[1].substr(citeKey.length).trim()\n      if (afterKey[0] === ',') afterKey = afterKey.substr(1).trim()\n      // Locator should be in the form of 11-22, 33\n      // Would not work form roman numerals or alphabetical sections\n      const locatorMatch = afterKey.match(/(\\d|-| |,)+/g)\n      if (locatorMatch !== null) {\n        locator = locatorMatch[0].trim()\n        // String before the locator is taken to be the label\n        // Use heuristic from https://pandoc.org/MANUAL.html#citation-syntax to convert locator label to valid\n        // Label has to be one of the following: https://docs.citationstyles.org/en/stable/specification.html#locators\n        label = afterKey.split(locator)[0].trim()\n        label = locatorMapping[label] || 'page'\n        // String after the locator is taken to be the suffix\n        suffix = afterKey.split(locator)[1].trim()\n      } else {\n        // If no locator is found, entire string is assumed to be the suffix\n        suffix = afterKey.trim()\n      }\n\n      entries.push({\n        // Get the first capture group which returns the citekey without @\n        id: citeItem.match(citeKeyRe)[1],\n        locator,\n        label,\n        prefix,\n        suffix,\n        'suppress-author': suppressAuthor,\n      })\n    }\n  } else {\n    // Single item in the form of @item1\n    // See https://citeproc-js.readthedocs.io/en/latest/running.html#special-citation-forms\n    isComposite = true\n    entries = [citeString].map((str) => ({\n      id: str.match(citeKeyRe)[1],\n    }))\n  }\n  return [entries, isComposite]\n}\n","import fetch from 'cross-fetch'\n\nexport const isNode = typeof window === 'undefined'\n\nexport const readFile = async (path) => {\n  if (isValidHttpUrl(path)) {\n    return fetch(path)\n      .then((response) => response.text())\n      .then((data) => data)\n  } else {\n    if (isNode) {\n      return import('fs').then((fs) => fs.readFileSync(path, 'utf8'))\n    } else {\n      throw new Error(`Cannot read non valid URL in node env.`)\n    }\n  }\n}\n\n/**\n * Check if valid URL\n * https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\n *\n * @param {string} str\n * @return {boolean}\n */\nexport const isValidHttpUrl = (str) => {\n  let url\n\n  try {\n    url = new URL(str)\n  } catch (_) {\n    return false\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n\n/**\n * Get bibliography by merging options and vfile data\n *\n * @param {import('./generator.js').Options} options\n * @param {import('vfile').VFile} file\n */\nexport const getBibliography = async (options, file) => {\n  let bibliography = ''\n  if (options.bibliography) {\n    bibliography = options.bibliography\n    // @ts-ignore\n  } else if (file?.data?.frontmatter?.bibliography) {\n    // @ts-ignore\n    bibliography = file.data.frontmatter.bibliography\n    // If local path, get absolute path\n    if (!isValidHttpUrl(bibliography)) {\n      if (isNode) {\n        bibliography = await import('path').then((path) =>\n          path.join(options.path || file.cwd, bibliography)\n        )\n      } else {\n        throw new Error(`Cannot read non valid bibliography URL in node env.`)\n      }\n    }\n  }\n\n  return bibliography\n}\n\n/**\n * Load CSL - supports predefined name from config.templates.data or http, file path (nodejs)\n *\n * @param {*} Cite cite object from citation-js\n * @param {string} format CSL name e.g. apa or file path to CSL file\n * @param {string} root optional root path\n */\nexport const loadCSL = async (Cite, format, root = '') => {\n  const config = Cite.plugins.config.get('@csl')\n  if (!Object.keys(config.templates.data).includes(format)) {\n    const cslName = `customCSL-${Math.random().toString(36).slice(2, 7)}`\n    let cslPath = ''\n    if (isValidHttpUrl(format)) cslPath = format\n    else {\n      if (isNode) cslPath = await import('path').then((path) => path.join(root, format))\n    }\n    try {\n      config.templates.add(cslName, await readFile(cslPath))\n    } catch (err) {\n      throw new Error(`Input CSL option, ${format}, is invalid or is an unknown file.`)\n    }\n    return cslName\n  } else {\n    return format\n  }\n}\n\n/**\n * Load locale - supports predefined name from config.locales.data or http, file path (nodejs)\n *\n * @param {*} Cite cite object from citation-js\n * @param {string} format locale name\n * @param {string} root optional root path\n */\nexport const loadLocale = async (Cite, format, root = '') => {\n  const config = Cite.plugins.config.get('@csl')\n  if (!Object.keys(config.locales.data).includes(format)) {\n    let localePath = ''\n    if (isValidHttpUrl(format)) localePath = format\n    else {\n      if (isNode) localePath = await import('path').then((path) => path.join(root, format))\n    }\n    try {\n      const file = await readFile(localePath)\n      const xmlLangRe = /xml:lang=\"(.+)\"/\n      const localeName = file.match(xmlLangRe)[1]\n      config.locales.add(localeName, file)\n      return localeName\n    } catch (err) {\n      throw new Error(`Input locale option, ${format}, is invalid or is an unknown file.`)\n    }\n  } else {\n    return format\n  }\n}\n","import parse5 from 'parse5'\nimport { fromParse5 } from 'hast-util-from-parse5'\n\n/**\n * Convert HTML to HAST node\n *\n * @param {string} html\n */\nexport const htmlToHast = (html) => {\n  const p5ast = parse5.parseFragment(html)\n  return fromParse5(p5ast).children[0]\n}\n","/**\n * @typedef {import('hast').Node} Node\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('unist-util-visit').Visitor<Node>} Visitor\n * @typedef {import('./parse-citation').CiteItem} CiteItem\n * @typedef {\"note\" | \"in-text\"} Mode\n * @typedef Options\n *   Configuration.\n * @property {string} [bibliography]\n *   Name of bibtex or CSL-JSON file\n * @property {string} [path]\n *   Optional path to file (node). Will be joined with `options.bibliography` and used in place of cwd of file if provided.\n * @property {'apa'|'vancouver'|'harvard1'|'chicago'|'mla'|string} [csl]\n *   One of 'apa', 'vancouver', 'harvard1', 'chicago', 'mla'. A local file path or URL to a valid CSL file is also accepted.\n * @property {string} [lang]\n *   Locale to use in formatting citations. Defaults to en-US. A local file path or URL to a valid locale file is also accepted.\n * @property {boolean} [suppressBibliography]\n *   By default, biliography is inserted after the entire markdown file.\n *   If the file contains `[^Ref]`, the biliography will be inserted there instead.\n * @property {string[]} [noCite]\n *   Citation IDs (@item1) to include in the bibliography even if they are not cited in the document\n * @property {string[]} [inlineClass]\n *   Class(es) to add to the inline citation.\n * @property {string[]} [inlineBibClass]\n *   Class(es) to add to the inline bibliography. Leave empty for no inline bibliography.\n */\n\nimport { visit } from 'unist-util-visit'\nimport fetch from 'cross-fetch'\nimport { parseCitation } from './parse-citation.js'\nimport { citeExtractorRe } from './regex.js'\nimport { isNode, isValidHttpUrl, readFile, getBibliography, loadCSL, loadLocale } from './utils.js'\nimport { htmlToHast } from './html-transform-node.js'\n\nconst defaultCiteFormat = 'apa'\nconst permittedTags = ['div', 'p', 'span', 'li']\nconst idRoot = 'CITATION'\n\n/**\n * Generate citation using citeproc\n * This accounts for prev citations and additional properties\n *\n * @param {*} citeproc\n * @param {Mode} mode\n * @param {CiteItem[]} entries\n * @param {number} citationId\n * @param {any[]} citationPre\n * @param {Options} options\n * @param {boolean} isComposite\n * @return {[string, string]}\n */\nconst genCitation = (citeproc, mode, entries, citationId, citationPre, options, isComposite) => {\n  const key = `${idRoot}-${citationId}`\n  const c = citeproc.processCitationCluster(\n    {\n      citationID: key,\n      citationItems: entries,\n      properties:\n        mode === 'in-text'\n          ? { noteIndex: 0, mode: isComposite ? 'composite' : '' }\n          : { noteIndex: citationId, mode: isComposite ? 'composite' : '' },\n    },\n    citationPre.length > 0 ? citationPre : [],\n    []\n  )\n\n  // console.log(Object.getOwnPropertyNames(citeproc.registry))\n  // console.log(citeproc.registry.citationreg.citationByIndex)\n  // c = [ { bibchange: true, citation_errors: [] }, [ [ 0, '(1)', 'CITATION-1' ] ]]\n  const citationText = c[1].find((x) => x[2] === key)[1]\n  const ids = `citation--${entries.map((x) => x.id.toLowerCase()).join('--')}--${citationId}`\n  if (mode === 'note') {\n    // Use cite-fn-{id} to denote footnote from citation, will clean it up later to follow gfm \"user-content\" format\n    return [\n      citationText,\n      htmlToHast(\n        `<span class=\"${(options.inlineClass ?? []).join(\n          ' '\n        )}\" id=${ids}><sup><a href=\"#cite-fn-${citationId}\" id=\"cite-fnref-${citationId}\" data-footnote-ref aria-describedby=\"footnote-label\">${citationId}</a></sup></span>`\n      ),\n    ]\n  }\n  // Coerce to html to parse HTML code e.g. &#38; and return text node\n  return [\n    citationText,\n    htmlToHast(\n      `<span class=\"${(options.inlineClass ?? []).join(' ')}\" id=${ids}>${citationText}</span>`\n    ),\n  ]\n}\n\n{\n  /* <section data-footnotes class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p>First note <a href=\"#user-content-fnref-1\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n</ol>\n</section> */\n}\n\n/**\n * Create new footnote section node based on footnoteArray mappings\n *\n * @param {{int: string}} citationDict\n * @param {{type: 'citation' | 'existing', oldId: number}[]} footnoteArray\n * @param {Element | undefined} footnoteSection\n * @return {Element}\n */\nconst genFootnoteSection = (citationDict, footnoteArray, footnoteSection) => {\n  /** @type {Element} */\n  const list = {\n    type: 'element',\n    tagName: 'ol',\n    children: [{ type: 'text', value: '\\n' }],\n  }\n  let oldFootnoteList\n  if (footnoteSection) {\n    oldFootnoteList = footnoteSection.children.find((n) => n.tagName === 'ol')\n  }\n  for (const [idx, item] of footnoteArray.entries()) {\n    const { type, oldId } = item\n    if (type === 'citation') {\n      list.children.push({\n        type: 'element',\n        tagName: 'li',\n        properties: { id: `user-content-fn-${idx + 1}` },\n        children: [\n          {\n            type: 'element',\n            tagName: 'p',\n            properties: {},\n            children: [\n              htmlToHast(`<span>${citationDict[oldId]}</span>`),\n              {\n                type: 'element',\n                tagName: 'a',\n                properties: {\n                  href: `#user-content-fnref-${idx + 1}`,\n                  dataFootnoteBackref: true,\n                  className: ['data-footnote-backref'],\n                  ariaLabel: 'Back to content',\n                },\n                children: [{ type: 'text', value: '↩' }],\n              },\n            ],\n          },\n          { type: 'text', value: '\\n' },\n        ],\n      })\n    } else if (type === 'existing') {\n      // @ts-ignore\n      const liNode = oldFootnoteList.children.find(\n        (n) => n.tagName === 'li' && n.properties.id === `user-content-fn-${oldId}`\n      )\n      liNode.properties.id = `user-content-fn-${idx + 1}`\n      const aNode = liNode.children[1].children.find((n) => n.tagName === 'a')\n      aNode.properties.href = `#user-content-fnref-${idx + 1}`\n      list.children.push(liNode)\n    }\n  }\n\n  /** @type {Element} */\n  const newfootnoteSection = {\n    type: 'element',\n    tagName: 'section',\n    properties: { dataFootnotes: true, className: ['footnotes'] },\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: { className: ['sr-only'], id: 'footnote-label' },\n        children: [{ type: 'text', value: 'Footnotes' }],\n      },\n      { type: 'text', value: '\\n' },\n      list,\n    ],\n  }\n  return newfootnoteSection\n}\n\n/**\n * Generate bibliography in html and convert it to hast\n *\n * @param {*} citeproc\n */\nconst genBiblioNode = (citeproc) => {\n  const [params, bibBody] = citeproc.makeBibliography()\n  const bibliography =\n    '<div id=\"refs\" class=\"references csl-bib-body\">\\n' + bibBody.join('') + '</div>'\n  const biblioNode = htmlToHast(bibliography)\n\n  // Add citekey id to each bibliography entry.\n  biblioNode.children\n    .filter((node) => node.properties?.className?.includes('csl-entry'))\n    .forEach((node, i) => {\n      const citekey = params.entry_ids[i][0].toLowerCase()\n      node.properties = node.properties || {}\n      node.properties.id = 'bib-' + citekey\n    })\n  return biblioNode\n}\n\n/**\n * Rehype plugin that formats citations in markdown documents and insert bibliography in html format\n *\n *    [-@wadler1990]                              --> (1990)\n *    [@hughes1989, sec 3.4]                      --> (Hughes 1989, sec 3.4)\n *    [see @wadler1990; and @hughes1989, pp. 4]   --> (see Wadler 1990 and Hughes 1989, pp. 4)\n *\n * @param {*} Cite cite object from citation-js configured with the required CSLs\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypeCitationGenerator = (Cite) => {\n  return (options = {}) => {\n    return async (tree, file) => {\n      let bibliography = await getBibliography(options, file)\n      if (!bibliography) {\n        return\n      }\n\n      /** @type {string} */\n      let bibtexFile\n      /** @type {string} */ // @ts-ignore\n      const inputCiteformat = options.csl || file?.data?.frontmatter?.csl || defaultCiteFormat\n      const inputLang = options.lang || 'en-US'\n      const config = Cite.plugins.config.get('@csl')\n      const citeFormat = await loadCSL(Cite, inputCiteformat, options.path)\n      const lang = await loadLocale(Cite, inputLang, options.path)\n\n      if (isValidHttpUrl(bibliography)) {\n        isNode\n        const response = await fetch(bibliography)\n        bibtexFile = await response.text()\n      } else {\n        if (isNode) {\n          bibtexFile = await readFile(bibliography)\n        } else {\n          throw new Error(`Cannot read non valid bibliography URL in node env.`)\n        }\n      }\n\n      const citations = new Cite(bibtexFile)\n      const citationIds = citations.data.map((x) => x.id)\n      const citationPre = []\n      const citationDict = {}\n      let citationId = 1\n      const citeproc = config.engine(citations.data, citeFormat, lang, 'html')\n      /** @type {Mode} */\n      const mode = citeproc.opt.xclass\n\n      visit(tree, 'text', (node, idx, parent) => {\n        const match = node.value.match(citeExtractorRe)\n        //@ts-ignore\n        if (!match || !permittedTags.includes(parent.tagName)) return\n        const citeStartIdx = match.index\n        const citeEndIdx = match.index + match[0].length\n        const newChildren = []\n        // if preceding string\n        if (citeStartIdx !== 0) {\n          // create a new child node\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(0, citeStartIdx),\n          })\n        }\n\n        const [entries, isComposite] = parseCitation(match[0])\n\n        // If id is not in citation file (e.g. route alias or js package), abort process\n        for (const citeItem of entries) {\n          if (!citationIds.includes(citeItem.id)) return\n        }\n        const [citedText, citedTextNode] = genCitation(\n          citeproc,\n          mode,\n          entries,\n          citationId,\n          citationPre,\n          options,\n          isComposite\n        )\n        citationDict[citationId] = citedText\n\n        // Prepare citationPre and citationId for the next cite instance\n        citationPre.push([`${idRoot}-${citationId}`, 0])\n        citationId = citationId + 1\n\n        // TODO: return html with link\n        newChildren.push(citedTextNode)\n\n        // if trailing string\n        if (citeEndIdx < node.value.length) {\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(citeEndIdx),\n          })\n        }\n\n        // insert into the parent\n        // @ts-ignore\n        parent.children = [\n          ...parent.children.slice(0, idx),\n          ...newChildren,\n          ...parent.children.slice(idx + 1),\n        ]\n      })\n\n      if (options.noCite) {\n        citeproc.updateItems(options.noCite.map((x) => x.replace('@', '')))\n      }\n\n      if (\n        citeproc.registry.mylist.length >= 1 &&\n        (!options.suppressBibliography || options.inlineBibClass?.length > 0)\n      ) {\n        const biblioNode = genBiblioNode(citeproc)\n        let bilioInserted = false\n\n        const biblioMap = {}\n        biblioNode.children\n          .filter((node) => node.properties?.className?.includes('csl-entry'))\n          .forEach((node) => {\n            const citekey = node.properties.id.split('-').slice(1).join('-')\n            biblioMap[citekey] = { ...node }\n            biblioMap[citekey].properties = { id: 'inlinebib-' + citekey }\n          })\n\n        // Insert it at ^ref, if not found insert it as the last element of the tree\n        visit(tree, 'element', (node, idx, parent) => {\n          // Add inline bibliography\n          if (\n            options.inlineBibClass?.length > 0 &&\n            node.properties?.id?.toString().startsWith('citation-')\n          ) {\n            // id is citation--nash1951--nash1950--1\n            const [, ...citekeys] = node.properties.id.toString().split('--')\n            const citationID = citekeys.pop()\n\n            const inlineBibNode = {\n              type: 'element',\n              tagName: 'div',\n              properties: {\n                className: options.inlineBibClass,\n                id: `inlineBib--${citekeys.join('--')}--${citationID}`,\n              },\n              children: citekeys.map((citekey) => {\n                const aBibNode = biblioMap[citekey]\n                aBibNode.properties = {\n                  class: 'inline-entry',\n                  id: `inline--${citekey}--${citationID}`,\n                }\n                return aBibNode\n              }),\n            }\n            parent.children.push(inlineBibNode)\n          }\n\n          // Add bibliography\n          if (\n            !options.suppressBibliography &&\n            (node.tagName === 'p' || node.tagName === 'div') &&\n            node.children[0].value === '[^ref]'\n          ) {\n            parent.children[idx] = biblioNode\n            bilioInserted = true\n          }\n        })\n\n        if (!options.suppressBibliography && !bilioInserted) {\n          tree.children.push(biblioNode)\n        }\n      }\n\n      let footnoteSection\n      visit(tree, 'element', (node, index, parent) => {\n        if (node.tagName === 'section' && node.properties.dataFootnotes) {\n          footnoteSection = node\n          parent.children.splice(index, 1)\n        }\n      })\n\n      // Need to adjust footnote numbering based on existing ones already assigned\n      // And insert them into the footnote section (if exists)\n      // Footnote comes after bibliography\n      if (mode === 'note' && Object.keys(citationDict).length > 0) {\n        /** @type {{type: 'citation' | 'existing', oldId: number}[]} */\n        let fnArray = []\n        let index = 1\n        visit(tree, 'element', (node) => {\n          if (node.tagName === 'sup') {\n            let nextNode = node.children[0]\n            if (nextNode.tagName === 'a') {\n              // @ts-ignore\n              const { href, id } = nextNode.properties\n              if (href.includes('fn') && id.includes('fnref')) {\n                const oldId = href.split('-').pop()\n                fnArray.push({\n                  type: href.includes('cite') ? 'citation' : 'existing',\n                  oldId,\n                })\n                // Update ref number\n                // @ts-ignore\n                nextNode.properties.href = `#user-content-fn-${index}`\n                // @ts-ignore\n                nextNode.properties.id = `user-content-fnref-${index}`\n                nextNode.children[0].value = index.toString()\n                index += 1\n              }\n            }\n          }\n        })\n        // @ts-ignore\n        const newFootnoteSection = genFootnoteSection(citationDict, fnArray, footnoteSection)\n        tree.children.push(newFootnoteSection)\n      } else {\n        if (footnoteSection) tree.children.push(footnoteSection)\n      }\n    }\n  }\n}\n\nexport default rehypeCitationGenerator\n"],"names":["citeExtractorRe","citeKeyRe","citeBracketRe","locatorMapping","book","chapter","column","figure","folio","number","line","note","opus","page","paragraph","part","section","verse","volume","parseCitation","citeString","entries","isComposite","test","citeItems","substr","length","split","citeItem","prefix","locator","label","suffix","citeChunk","Error","trim","suppressAuthor","indexOf","commaIndex","undefined","citeKey","match","afterKey","locatorMatch","push","id","map","str","readFile","path","isValidHttpUrl","fetch","then","response","text","data","fs","readFileSync","url","URL","_","protocol","getBibliography","options","file","bibliography","frontmatter","join","cwd","loadCSL","Cite","format","root","config","plugins","get","Object","keys","templates","includes","cslName","Math","random","toString","slice","cslPath","add","err","loadLocale","locales","localePath","xmlLangRe","localeName","htmlToHast","html","p5ast","parse5","parseFragment","fromParse5","children","defaultCiteFormat","permittedTags","idRoot","genCitation","citeproc","mode","citationId","citationPre","key","c","processCitationCluster","citationID","citationItems","properties","noteIndex","citationText","find","x","ids","toLowerCase","inlineClass","genFootnoteSection","citationDict","footnoteArray","footnoteSection","list","type","tagName","value","oldFootnoteList","n","idx","item","oldId","href","dataFootnoteBackref","className","ariaLabel","liNode","aNode","newfootnoteSection","dataFootnotes","genBiblioNode","params","bibBody","makeBibliography","biblioNode","filter","node","forEach","i","citekey","entry_ids","rehypeCitationGenerator","tree","bibtexFile","inputCiteformat","csl","inputLang","lang","citeFormat","citations","citationIds","engine","opt","xclass","visit","parent","citeStartIdx","index","citeEndIdx","newChildren","citedText","citedTextNode","noCite","updateItems","replace","registry","mylist","suppressBibliography","inlineBibClass","bilioInserted","biblioMap","startsWith","citekeys","pop","inlineBibNode","aBibNode","class","splice","fnArray","nextNode","newFootnoteSection"],"mappings":"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"}